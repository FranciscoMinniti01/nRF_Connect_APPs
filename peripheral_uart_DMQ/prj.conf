

# Enable the UART driver
CONFIG_UART_ASYNC_API=y
CONFIG_NRFX_UARTE0=y
#CONFIG_SERIAL=y                # Definido en ubx_bmd340eval    # Habilitar opciones para el serial drivers.

#CONFIG_GPIO=y                  # Definido en ubx_bmd340eval    # Incluir controladores GPIO en la configuración del sistema

# Make sure printk is printing to the UART console
#CONFIG_CONSOLE=y               # Definido en ubx_bmd340eval
#CONFIG_UART_CONSOLE=y          # Definido en ubx_bmd340eval

CONFIG_HEAP_MEM_POOL_SIZE=2048

CONFIG_BT=y                                                     # Habilita la pila de BLE y un conjunto de configuraciones predeterminadas
CONFIG_BT_PERIPHERAL=y                                          # Habilita el soporte para el rol de BLE periferico
CONFIG_BT_DEVICE_NAME="Nordic_UART_Service"                     # Nombre del dispositivo BLE (Nombre que ve el usuario)
CONFIG_BT_MAX_CONN=1                                            # Número máximo de conexiones Bluetooth simultáneas admitidas.
CONFIG_BT_MAX_PAIRED=1                                          # Número máximo de dispositivos Bluetooth emparejados. El número mínimo (y predeterminado) es 1.

#CONFIG_BT_NUS=n                                                # Habilita los archivos nus.c y nus.h. En ellos se declara el servicio y se agrega NUS a la tabla de atributos de la aplicación.
CONFIG_BT_GAP_AUTO_UPDATE_CONN_PARAMS=n                         # Desactva el envio automático de las solicitudes de actualizaciones de parámetros de conexión, se hace manualmente.
CONFIG_BT_USER_PHY_UPDATE=y


# Enable bonding
CONFIG_BT_SMP=y                                                 # Habilita el Protocolo de administración de seguridad a la pila de BLE. Esta inclucion permite y realiza el emparejamiento entre dispositivos
CONFIG_BT_FIXED_PASSKEY=y                                       # Con esta opción habilitada, la aplicación podrá llamar a la API bt_passkey_set() para establecer una clave de acceso fija. Si está habilitada, se llamará a la devolución de llamada pairing_confirm() para todos los emparejamientos entrantes.
CONFIG_SETTINGS=y                                               # Dependencia necesaria de CONFIG_BT_SETTINGS
CONFIG_BT_SETTINGS=y                                            # Cuando se habilita, la pila de Bluetooth se encargará de almacenar (y restaurar) el estado de Bluetooth (por ejemplo, las claves de emparejamiento) y la configuración de forma persistente en la memoria flash.
CONFIG_FLASH=y                                                  # Dependencia necesaria de CONFIG_BT_SETTINGS                                             
CONFIG_FLASH_PAGE_LAYOUT=y                                      # Dependencia necesaria de CONFIG_BT_SETTINGS
CONFIG_FLASH_MAP=y                                              # Dependencia necesaria de CONFIG_BT_SETTINGS
CONFIG_NVS=y                                                    # Dependencia necesaria de CONFIG_BT_SETTINGS

# Enable DK LED and Buttons library
CONFIG_DK_LIBRARY=y

# This example requires more stack
CONFIG_MAIN_STACK_SIZE=1152
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=2048

# Config logger
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
#CONFIG_USE_SEGGER_RTT=y        # Definido en ubx_bmd340eval
#CONFIG_LOG_BACKEND_RTT=y       # Definido en ubx_bmd340eval
CONFIG_LOG_BACKEND_UART=n
CONFIG_LOG_PRINTK=n
CONFIG_FPU=y                                                    # Permite que log pueda procesar numeros flotantes

CONFIG_ASSERT=y
